<?xml version="1.0"?>
<project xmlns:ivy="antlib:org.apache.ivy.ant"
         name="dream"
         default="main"
         basedir=".">

    <property name="src.dir" value="src" />
    <property name="web.dir" value="war" />
    <property name="target.dir" value="target" />
    <property name="build.dir" value="${web.dir}/WEB-INF" />
    <property name="build.classes" value="${build.dir}/classes" />
    <property name="resources.dir" value="${src.dir}/resources" />
    <property name="lib.dir" value="${build.dir}/lib" />

    <property name="base.transient.dir" value="${basedir}/build-transient-src" />
    <property name="java.transient.dir" value="${base.transient.dir}/java" />

    <property name="soy.src.dir" value="${resources.dir}/soy" />
    <property name="soy.generated.dir" value="${java.transient.dir}/com/tqin/dream/soy/tmpl" />
    <property name="soy.generated.package" value="com.tqin.dream.soy.tmpl" />

    <property name="name" value="dream" />
    <property file="build.properties" />

    <property environment="env" />

    <!--<path id="master-classpath">-->
        <!--<fileset dir="${lib.dir}">-->
            <!--<include name="*.jar" />-->
        <!--</fileset>-->

        <!--<pathelement path="${build.dir}" />-->
    <!--</path>-->

    <target name="info">
        <echo>Hi! Welcome to classified Mission DREAM</echo>
    </target>

    <target name="init" description="Create project structure and timestamp">
        <mkdir dir="${src.dir}" />
        <mkdir dir="${build.dir}" />
        <mkdir dir="${lib.dir}" />
        <mkdir dir="${target.dir}" />

        <tstamp>
            <format property="now" pattern="yyyyMMddHHmmss" locale="en,US" />
        </tstamp>
    </target>

    <target name="clean" description="Clean output directories">
        <delete dir="${build.classes}" />
        <delete dir="${base.transient.dir}" />
        <delete dir="${target.dir}" />
    </target>

    <target name="clean-lib" description="delete library files">
        <delete>
            <fileset dir="${lib.dir}">
                <include name="*" />
            </fileset>
        </delete>
    </target>

    <target name="resolve" description="retrieve dependencies with ivy">
        <echo message="Getting dependencies..." />
        <mkdir dir="${lib.dir}" />
        <ivy:retrieve pattern="${lib.dir}/[artifact]-[revision].[ext]" />

        <ivy:cachepath pathid="compile.path" conf="compile" />
        <ivy:cachepath pathid="runtime.path" conf="runtime" />
        <ivy:cachepath pathid="test.path" conf="test" />
    </target>

    <target name="compile" description="compile source" depends="init,resolve,generate-parseinfo-soy">
        <mkdir dir="${build.classes}" />
        <javac destdir="${build.classes}" source="${jdk.version}" target="${jdk.version}"
               debug="true" includeantruntime="false" classpathref="compile.path">
            <src path="${src.dir}" />
            <src path="${soy.generated.dir}" />
            <!--<classpath refid="master-classpath" />-->
        </javac>
    </target>

    <target name="copy-resources" description="copy java resources (xml, properties)">
        <copy todir="${build.classes}">
            <fileset dir="${resources.dir}">
                <include name="**/*.xml" />
                <include name="**/*.properties" />
            </fileset>
            <fileset dir="${resources.dir}" includes="soy/**" />
        </copy>
    </target>

    <target name="package" depends="clean,compile,copy-resources"
            description="create war file for deployment">

        <war destfile="${target.dir}/${name}.war" needxmlfile="false">
            <webinf dir="${web.dir}/WEB-INF" />
            <lib dir="${lib.dir}" />
            <zipfileset dir="${web.dir}/resources" prefix="resources" />
        </war>

    </target>

    <target name="deploy-war-to-tomcat" depends="package"
            description="copy war file to webapps directory of local tomcat for deploy">
        <copy file="${target.dir}/${name}.war" todir="${env.CATALINA_HOME}/webapps" />
    </target>

    <target name="main" depends="deploy-war-to-tomcat" />

    <!--Below will be Soy Stuff-->
    <fileset id="soy.src.files" dir="${soy.src.dir}" includes="**/*.soy"/>

    <!--Generate Java parse info for given soy files-->
    <macrodef name="m_generate-parseinfo-soy">
        <attribute name="javaPackage" />
        <attribute name="outputDirectory" />
        <attribute name="inputFiles" />

        <!--
            fork: invoke a new JVM, dir: directory to invoke the JVM in,
            @param javaPackage Java package of the generated source. must match outputDirectory
            @param outputDirectory Target dir for Java output
            @param inputFiles Soy source files
        -->
        <sequential>
            <java classname="com.google.template.soy.SoyParseInfoGenerator" fork="true" failonerror="true" maxmemory="256m" dir=".">
                <classpath refid="compile.path" />
                <arg line="--javaClassNameSource filename" />
                <arg line="--javaPackage @{javaPackage}" />
                <arg line="--outputDirectory @{outputDirectory}" />
                <arg line="--srcs @{inputFiles}" />
            </java>
        </sequential>
    </macrodef>

    <target name="check-soy-update">
        <uptodate targetfile="${soy.generated.dir}" property="soy.uptodate">
            <srcfiles refid="soy.src.files" />
        </uptodate>

        <condition property="skip.soy.parse">
            <or>
                <isset property="soy.uptodate" />
            </or>
        </condition>
    </target>

    <target name="generate-parseinfo-soy" depends="init,check-soy-update"
            unless="skip.soy.parse">
        <mkdir dir="${soy.generated.dir}" />

        <pathconvert property="soyfiles" refid="soy.src.files" pathsep=" " />

        <echo message="${soyfiles}" />

        <m_generate-parseinfo-soy javaPackage="${soy.generated.package}"
                                  outputDirectory="${soy.generated.dir}"
                                  inputFiles="${soyfiles}" />

        <touch datetime="${now}" pattern="yyyyMMddHHmmss" >
            <dirset dir="${soy.generated.dir}" />
        </touch>
    </target>

</project>